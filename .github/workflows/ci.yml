name: ci

on: [push, pull_request]

jobs:
  build_image:
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and export
        uses: docker/build-push-action@v2
        with:
          tags: cblessing24/compenv:latest
          outputs: type=oci,dest=/tmp/image.tar
      - name: Upload image as artifact
        uses: actions/upload-artifact@v3
        with:
          name: image
          path: /tmp/image.tar
  lint:
    needs: build_image
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        linter: ["black", "isort", "mypy", "flake8", "pylint"]
    steps:
      - name: Download image artifact
        uses: actions/download-artifact@v3
        with:
          name: image
          path: /tmp
      - name: Load image
        run: docker image load -i /tmp/image.tar -q
      - name: Check out code
        uses: actions/checkout@v2
      - name: Lint code
        run: touch .env && docker-compose run ${{ matrix.linter }}
  test:
    needs: lint
    runs-on: ubuntu-20.04
    steps:
      - name: Download image artifact
        uses: actions/download-artifact@v3
        with:
          name: image
          path: /tmp
      - name: Load image
        run: docker image load -i /tmp/image.tar -q
      - name: Test code
        run: touch .env && docker-compose run pytest_github
      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: /src/reports/coverage.xml
          verbose: true
  push_image:
    needs: test
    runs-on: ubuntu-20.04
    steps:
      - name: Download image artifact
        uses: actions/download-artifact@v3
        with:
          name: image
          path: /tmp
      - name: Load image
        run: docker image load -i /tmp/image.tar -q
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push image
        run: docker push cblessing24/compenv:latest
  publish_package:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    runs-on: ubuntu-20.04
    steps:
      - name: Download image artifact
        uses: actions/download-artifact@v3
        with:
          name: image
          path: /tmp
      - name: Load image
        run: docker image load -i /tmp/image.tar -q
      - name: Check out code
        uses: actions/checkout@v2
      - name: Build distribution artifacts
        run: touch .env && docker-compose run build
      - name: Upload distribution packages to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD }}
